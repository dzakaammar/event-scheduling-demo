version: "3.9"
services:
  postgres:
    image: postgres:12-alpine
    profiles: ['all', 'default']
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=event_schedule
    ports:
      - "5432:5432"
  grpc_app:
    build:
      context: .
      dockerfile: ./build/local/Dockerfile
    profiles: ['all', 'default']
    ports:
      - "8000:8000"
    environment:
      - ENV_DB_SOURCE=postgresql://root:secret@postgres:5432/event_schedule?sslmode=disable
      - ENV_GRPC_ADDRESS=0.0.0.0:8000
      - ENV_OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
    depends_on:
      - postgres
    volumes:
      - ./:/app
    entrypoint: [ "/app/bin/wait-for.sh", "postgres:5432", "--", "/app/bin/start.sh" ]
    command: [ "air", "-c", "/app/build/local/.air_grpc_app.toml" ]
  grpc_gateway:
    build:
      context: .
      dockerfile: ./build/local/Dockerfile
    profiles: ['all', 'default']
    ports:
      - "8001:8001"
    environment:
      - ENV_GRPC_GATEWAY_ADDRESS=0.0.0.0:8001
      - ENV_GRPC_ADDRESS=grpc_app:8000
    depends_on:
      - grpc_app
    volumes:
      - ./:/app
    entrypoint: [ "/app/bin/wait-for.sh", "grpc_app:8000", "--timeout", "60", "--" ]
    command: [ "air", "-c", "/app/build/local/.air_grpc_gateway.toml" ]
  
  #  optional
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    profiles: ['all']
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    profiles: ['all']
    command: ["--config=/etc/otel.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./build/local/otel.yaml:/etc/otel.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one